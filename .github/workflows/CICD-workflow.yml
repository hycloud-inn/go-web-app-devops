
# CICD using GitHub actions

name: CI/CD

# Exclude the workflow to run on changes to the helm chart

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - 'helm/**'
      - 'k8s/**'
      - 'README.md'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go 1.22
      uses: actions/setup-go@v2
      with:
        go-version: 1.22

    - name: Build
      run: go build -o go-web-app

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: 1.22
        cache-dependency-path: go.sum

    - name: Test
      run: go test ./...
  
  code-quality:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v6
      with:
        version: v1.56.2
  
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        images: {{ secrets.DOCKERHUB_USERNAME }}/go-web-app-devops
        tags: |
          type=sha

  Sonar-analysis:
    name: Sonarqube and analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    #If you wish to fail your job when the Quality Gate is red, uncomment the following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  

  # update-newtag-in-helm-chart:
  #   runs-on: ubuntu-latest

  #   needs: push

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4
  #     with:
  #       token: ${{ secrets.TOKEN }}

  #   - name: Update tag in Helm chart
  #     run: |
  #       sed -i 's/tag: .*/tag: "${{github.run_id}}"/' helm/go-web-app-chart/values.yaml

  #   - name: Commit and push changes
  #     run: |
  #       git config --global user.email "abhishek@gmail.com"
  #       git config --global user.name "Abhishek Veeramalla"
  #       git add helm/go-web-app-chart/values.yaml
  #       git commit -m "Update tag in Helm chart"
  #       git push
